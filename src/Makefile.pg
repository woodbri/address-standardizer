ifdef PGVER
    PG_CONFIG = /usr/lib/postgresql/$(PGVER)/bin/pg_config
else
    ifndef PG_CONFIG
        PG_CONFIG = pg_config
    endif
endif
$(info 'PG_CONFIG=$(PG_CONFIG)' )
PG_VERSION = $(shell $(PG_CONFIG) --version)
PG_MAJOR = $(shell $(PG_CONFIG) --version | sed -e 's/^PostgreSQL \([0-9][0-9]*[.][0-9][0-9]*\).*$$/\1/gi')
PGSQL_VERSION = $(shell echo $(PG_MAJOR) | sed -e 's/[.]//' )

$(info 'PG_VERSION=$(PG_VERSION)')
$(info 'PG_MAJOR=$(PG_MAJOR)')
$(info 'PGSQL_VERSION=$(PGSQL_VERSION)')

ifeq "$(PG_MAJOR)" '9.4'
    CONVERSION = -Werror=conversion
else
    CONVERSION =
endif
$(info 'CONVERSION=$(CONVERSION)')

ifeq ($(OS),Windows_NT)
    INC_PORT = -I$(shell $(PG_CONFIG) --includedir-server )/port/win32
else
    INC_PORT =
endif

PG_CFLAGS = -O0 -g -fPIC -frounding-math -Wno-deprecated -fmax-errors=10  -DPGSQL_VERSION=$(PGSQL_VERSION) $(CONVERSION) -I$(shell $(PG_CONFIG) --cflags) -I$(shell $(PG_CONFIG) --includedir) -I$(shell $(PG_CONFIG) --includedir-server ) $(INC_PORT) -I .

#PG_CPPFLAGS = -O0 -g -Wall -std=c++0x -fPIC -frounding-math -Wno-deprecated -pedantic  -fmax-errors=10 -Wextra $(CONVERSION) -I .
PG_CPPFLAGS = -O0 -g -Wall -DPGSQL_VERSION=$(PGSQL_VERSION) -fPIC -frounding-math -Wno-deprecated -pedantic  -fmax-errors=10 -Wextra $(CONVERSION) -I .

CPP = g++
CC = gcc

AS_VERSION = 2.0
OBJS = address_standardizer.o std_pg_hash.o as_wrapper.o grammar.o inclass.o lexentry.o lexicon.o metarule.o metasection.o outclass.o rule.o rulesection.o search.o token.o tokenizer.o utils.o trieutf8.o utf8iterator.o md5.o
MODULE_big = address_standardizer2-$(AS_VERSION)
EXTENSION = address_standardizer2
OURSQL = address_standardizer2--$(AS_VERSION).sql
DATA_built = address_standardizer2-sample-data.sql $(OURSQL)
DOCS = README.address_standardizer2

SHLIB_LINK = -L /usr/lib/x86_64-linux-gnu/ `pkg-config --libs --cflags icu-uc icu-io` -L /usr/lib/x86_64-linux-gnu/ -lboost_regex -lboost_serialization

PGXS := $(shell $(PG_CONFIG) --pgxs)
include $(PGXS)

address_standardizer.o: address_standardizer.c address_standardizer.h
	$(CC) $(PG_CFLAGS) -o address_standardizer.o -c address_standardizer.c

$(OURSQL): $(OURSQL).in
	cp $(OURSQL).in $(OURSQL)

address_standardizer2-sample-data.sql: ../data/sample/*.lex ../data/sample/*.gmr
	../tools/load-lex-gmr-files -c sample ../data/sample address_standardizer2-sample-data.sql

help:
	@echo 'make [PGVER=9.2|9.3|9.4|9.5]|[PG_CONFIG=/path/to/pg_config] clean|install'



